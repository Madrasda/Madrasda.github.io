import ClientLayout from '@/components/layout-client';
import OrderDetailsModal from '@/components/orderdetails-modal';
import Head from 'next/head';
import Image from 'next/image';
import { useContext, useEffect, useState } from "react";
import { useRouter } from "next/router";
import { isTokenValid, getRole, getPhone } from "@/utils/JWTVerifier";
import { UserContext } from "context/context";
import axios from "axios";
import {uuidv4} from "@firebase/util";

export default function ClientProfile() {
  const router = useRouter();
  let isReady = router.isReady;
  const ctx = useContext(UserContext);
  const [phone, setPhone] = useState(0);
  const [details, setDetails] = useState([]);
  const [designs, setDesigns] = useState(null);
  const [loading, setLoading] = useState(false);
  const [client, setClient] = useState(false);

  const getOrderHistory = async () => {
    const response = await axios.get(
      "https://spring-madrasda-2f6mra4vwa-em.a.run.app/api/transaction/getAllOrdersById/",
      {
        headers: {
          Authorization: "Bearer " + localStorage.getItem("token"),
        },
      }
    );
    setDetails(response.data);
  };

  useEffect(() => {
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
    }, 1000);
  }, []);

  useEffect(() => {
    const jwtToken = localStorage.getItem("token");
    if (jwtToken && getRole(jwtToken) === "ROLE_ADMIN") router.push("/admin");
    if (jwtToken && getRole(jwtToken) === "ROLE_VENDOR") router.push("/vendor");
    if (jwtToken && isTokenValid(jwtToken)) {
      setClient(true);
      setPhone(getPhone(jwtToken));
      getOrderHistory();
    } else {
      setClient(false);
      router.push("/login");
    }
  }, []);

  if (loading && isReady)
    return (
      <div className='z-50 h-screen w-screen overflow-hidden'>
        <Image
          src='/loader.gif'
          width={1920}
          height={1080}
          className='object-cover object-center w-full h-full'
        />
      </div>
    );
  return (
    <>
      <Head>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/logo.png' />
        <title>Madrasda | Profile</title>
      </Head>

      <ClientLayout client={client}>
        <section className='body-font font-algeria'>
          <div className='px-5 py-24 mx-auto'>
            <h1 className='text-3xl font-bold text-primary md:ml-10 md:mt-4'>
              My Profile
            </h1>
            <div className='flex items-center mt-4 ml-16'>
              <h2 className='ml-2 title-font font-medium text-lg'>
                Phone Number :
              </h2>
              <input
                type='text'
                className='bg-white text-black text-lg outline-none focus:ring-primary cursor-default focus:border-[#D9D9D9] block w-96 p-2.5'
                placeholder={phone}
                readOnly
              />
            </div>

            {details && (
              <h1 className='font-algeria font-bold text-lg mt-10 ml-16'>
                Order History
              </h1>
            )}
            {details &&
              details.map((order) => (
                <div key={uuidv4()} className='px-3 md:w-7/12 ml-16 mb-4 mt-8'>
                  <div className='w-full flex items-center bg-off-white rounded-lg'>
                    {/* <div className='overflow-hidden rounded-lg w-2/12 h-2/12 bg-[#D9D9D9] border border-gray'>
                      <Image
                        src='/vikram-tee.png'
                        alt='ecommerce'
                        width={1080}
                        height={1920}
                        className='object-contain object-center w-full h-full block'
                      />
                    </div> */}
                    <div className='w-4/5 p-3 ml-4'>
                      <h6 className='font-semibold text-xl text-black'>
                        Order Date :{" "}
                        <span className='font-light'>
                          {order.orderDate
                            .toString()
                            .substring(0, order.orderDate.indexOf("T"))}
                        </span>
                      </h6>
                      <h6 className='font-semibold text-xl text-black'>
                        Order Total :{" "}
                        <span className='font-light'>
                          â‚¹{Number(order.orderTotal).toLocaleString("en-IN")}
                        </span>
                      </h6>
                      <h6 className='font-semibold text-xl text-black'>
                        Order Items :{" "}
                        <span className='font-light'>
                          {order.orderItems.length}
                        </span>
                      </h6>
                    </div>
                    <div className='w-1/5 scale-75'>
                      <OrderDetailsModal order={order}/>
                    </div>
                  </div>
                </div>
              ))}
          </div>
        </section>
      </ClientLayout>
    </>
  );
}

