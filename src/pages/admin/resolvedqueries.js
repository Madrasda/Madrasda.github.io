import Head from 'next/head'
import AdminLayout from '@/components/layout-admin'
import VendorQuery from '@/components/vendor-query';
import Link from 'next/link'
import axios from "axios";
import { useEffect } from "react";
import { useRouter } from "next/router";
import { useState } from 'react';

export default function Queries () {
  const router = useRouter();
  const [queries, setQueries] = useState(null);
  const verifyToken = async () => {
    const url = new URLSearchParams({
      token: localStorage.getItem('token')
    })
    axios.get(
      "http://localhost:8080/api/auth/?" + url
    ).then((response) => {
      console.log("refreshed");
    }).catch((err) => {
      localStorage.removeItem("token");
      router.push("/admin");
    })
  }

  const getQueries = async () => {
    axios.get(
      "http://localhost:8080/api/feedback/getAllQueries"
    ).then((response) => {
      setQueries(response.data.resolvedQueries.content);
    }).catch((err) => {
      console.log(err);
    })
  }

  useEffect(()=>{
    const token = localStorage.getItem("token");
    if (!token) {
      router.push("/admin");
    } else {
      try {
        verifyToken();
        getQueries();
      } catch (err) {
        router.push("/admin");
      }
    }
  }, []);

  return (
    <>
    <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.png" />
        <title>Resolved Queries</title>
    </Head>
    
    <AdminLayout>
    <main className='md:ml-32 overflow-hidden font-algeria'>
    <div className="px-5 my-10 mx-auto">
        <div className="md:ml-20 md:mt-10">
          <h1 className="body-font text-primary text-3xl">RESOLVED QUERIES</h1>
        </div>

        <hr className="h-px md:ml-20 md:mr-12 my-6 bg-black border-1"></hr>
        
        <div className='flex flex-col mt-4 md:ml-20 lg:mr-20'>
            {queries &&
              queries.map((q) => {
                return (
                  <VendorQuery 
                  key={q.id} 
                  queryId={q.id} 
                  name={q.vendorDTO.name} 
                  query={q.query} 
                  email={q.vendorDTO.email}
                  resolve={true}
                  />
                )
              })
            }
            {
              queries && queries.length===0 &&
              <h1 className='text-center text-xl text-gray font-light'>
                No queries resolved yet
              </h1>
            }
        </div>

        <div className='mt-14 flex justify-center'>
          <Link href="/admin/queries">
          <button type="button" className="mt-2 text-white bg-black font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2">Back</button>  
          </Link>
        </div>
    </div>
    </main>
    </AdminLayout>
    </>
  )
}
